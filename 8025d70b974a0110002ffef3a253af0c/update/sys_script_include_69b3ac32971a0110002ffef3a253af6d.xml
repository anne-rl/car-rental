<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_616811_car_renta.CarRentalUtils</api_name>
        <caller_access/>
        <client_callable>true</client_callable>
        <description>Utils Script Include for the Car Rental Reservation Application&#13;
</description>
        <name>CarRentalUtils</name>
        <script><![CDATA[var CarRentalUtils = Class.create();
CarRentalUtils.prototype = Object.extendsObject(global.AbstractAjaxProcessor,{
 
   
	
	isDatePast: function(strDate){
    // Create GlideDateTime objects for the current date and the passed in date
    var rightnow = new GlideDateTime();
    var testdate = new GlideDateTime(strDate);
    
    // If the testdate is before rightnow, return true, else return false
    if (testdate.before(rightnow)) {
      return true;
    }
    else {
      return false;
    }
  },
	
		
	isstartDateWithinBusinessHours: function(){
		
		var startTime = new GlideRecord(this.getParameter('sysparm_startTime'));
	
		var table = new GlideRecord("x_616811_car_renta_calendar_days");
		table.addQuery("type","=","business");
		table.addQuery("active", "=", true);
		table.query();
		table.next();
		
		var tableStartTime = new GlideDateTime(table.start_time);
		var tableEndTime = new GlideDateTime(table.end_time);
		

		if(startTime.getTime() >= tableStartTime.getTime() && startTime.getTime() <=  tableEndTime.getTime())
		{
			return false;
		}
		else{
			return true;
		}
	},
	
		
	isendDateWithinBusinessHours: function(){
		
		var endTime = new GlideRecord(this.getParameter('sysparm_endTime'));

		var table = new GlideRecord("x_616811_car_renta_calendar_days");
		table.addQuery("type","=","business");
		table.addQuery("active", "=", true);
		table.query();
		table.next();
		
		var tableStartTime = new GlideDateTime(table.start_time);
		var tableEndTime = new GlideDateTime(table.end_time);
		

		if(endTime.getTime() >= tableStartTime.getTime() && endTime.getTime() <=  tableEndTime.getTime())
		{
			return false;
		}
		else{
			return true;
		}
	},
	isDateNotWithinBusinessDays: function(){
	var carRecords = new GlideRecord("x_616811_car_renta_scheduled_reservations");
	var obj = carRecords.get(this.getParameter('sysparm_car'));
	var carRentalDays = carRecords.days;
	var startDay = new GlideDateTime(this.getParameter('sysparm_sTime')).getDayOfWeekLocalTime();
	var endDay = new GlideDateTime(this.getParameter('sysparm_eTime')).getDayOfWeekLocalTime();
		
	var days = ["mon", "tue","wed","thu","fri","sat","sun"];
		if(carRentalDays.includes(days[startDay-1]) == false || carRentalDays.includes(days[endDay-1]) == false){
			return carRentalDays+" "+ true;
		} else{
			return carRentalDays+" "+ false;
		}
		
	},
	
	
	
	dateFieldIsNotWithinBusinessHours: function(){
		
		var table = new GlideRecord("x_616811_car_renta_calendar_days");
		table.addQuery("type","=","business");
		table.addQuery("active", "=", true);
	
	    var startTime = new GlideDateTime(this.getParameter('sysparm_sTime'));
		
		var tableStartTime = new GlideDateTime(table.start_time);
		var tableEndTime = new GlideDateTime(table.end_time);
		
		
		
		if(startTime.getHours() < tableStartTime.getHours() || startTime.getHours() > tableEndTime.getHours()){
			return true;
		}
		
	},
	
	isDateOnHoliday: function(){
		
	    var table = new GlideRecord("x_616811_car_renta_calendar_days");
		table.addQuery("type","=","holiday");
		table.addQuery("active", "=", true);
		
		var start= new GlideDateTime(this.getParameter('sysparm_dateTime'));
		
		table.addQuery('date','CONTAINS',start.getDate()); 
		
		table.query();
	
		if(table.getRowCount() != 0){
			return true;
		} else{
			return false;
		}
	
		
	},
	
	isstartDateOverlappingstart: function(){
		

	
		
		var start= new GlideDateTime(this.getParameter('sysparm_dateTime'));
		var end= new GlideDateTime(this.getParameter('sysparm_endTime'));
		var car=  this.getParameter('sysparm_car');
		
		
		//var starttime = new GlideDateTime(table.start_datetime);
		
		//var endtime = new GlideDateTime(table.end_datetime);

		
		var table = new GlideRecord("x_616811_car_renta_scheduled_reservations");
		//var car2 = new GlideElement(table.car);
		table.addQuery("car",car);
		table.addQuery("start_datetime","<=", start.getDate());
		table.addQuery("end_datetime", ">=", start.getDate());
		
		//start.addDaysUTC(1);
// 		
// 		
		
	
		table.query();
		table.next();
		//if(starttime <= start.getDate() && endtime >= start.getDate()){
		//	return true;
		//}
		//else{
		//	return false;
		//}
		if(table.getRowCount() > 0){
			return true;
			
		} else{
			return false;	
		}
	},
	
	isstartDateOverlappingend: function(){
		

	
		
		var start= new GlideDateTime(this.getParameter('sysparm_dateTime'));
		var end= new GlideDateTime(this.getParameter('sysparm_endTime'));
		var car=  this.getParameter('sysparm_car');
		
		
		//var starttime = new GlideDateTime(table.start_datetime);
		
		//var endtime = new GlideDateTime(table.end_datetime);

		
		var table = new GlideRecord("x_616811_car_renta_scheduled_reservations");
		//var car2 = new GlideElement(table.car);
		table.addQuery("car",car);
		table.addQuery("start_datetime","CONTAINS", start.getDate());

		
		//start.addDaysUTC(1);
// 		
// 		
		
	
		table.query();
		table.next();
		//if(starttime <= start.getDate() && endtime >= start.getDate()){
		//	return true;
		//}
		//else{
		//	return false;
		//}
		if(table.getRowCount() != 0){
			return true;
			
		} else{
			return false;
		}

		
		},
	
   type: 'CarRentalUtils'
});
	
	


   

]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>maryanne.labasan</sys_created_by>
        <sys_created_on>2022-03-21 07:49:02</sys_created_on>
        <sys_id>69b3ac32971a0110002ffef3a253af6d</sys_id>
        <sys_mod_count>251</sys_mod_count>
        <sys_name>CarRentalUtils</sys_name>
        <sys_package display_value="Car Rental Reservation" source="x_616811_car_renta">8025d70b974a0110002ffef3a253af0c</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Car Rental Reservation">8025d70b974a0110002ffef3a253af0c</sys_scope>
        <sys_update_name>sys_script_include_69b3ac32971a0110002ffef3a253af6d</sys_update_name>
        <sys_updated_by>nieltabar</sys_updated_by>
        <sys_updated_on>2022-04-21 07:02:31</sys_updated_on>
    </sys_script_include>
</record_update>
